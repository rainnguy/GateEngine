<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="OrderMapper">

	<resultMap type="Order" id="orderResultMap">
		<result property="id" column="id"/>
		<result property="orderCode" column="order_code"/>
		<result property="orderTime" column="order_time"/>
		<result property="orderStatus" column="constant_name"/>
		<result property="tranAbbr" column="tran_abbr"/>
		<result property="userCode" column="user_code"/>
		<result property="merchantNum" column="merchant_num"/>
		<result property="merchantName" column="merchant_name"/>
		<result property="goodsName" column="goods_name"/>
		<result property="goodsValue" column="goods_value"/>
		<result property="price" column="price"/>
		<result property="number" column="number"/>
		<result property="amount" column="amount"/>
		<result property="payType" column="pay_type"/>
		<result property="payTypeContent" column="pay_type_content"/>
		<result property="payBank" column="pay_bank"/>
		<result property="payBankName" column="pay_bank_name"/>
		<result property="cardType" column="card_type"/>
		<result property="cardTypeContent" column="card_type_content"/>
		<result property="acqSsn" column="acq_ssn"/>
		<result property="respCode" column="resp_code"/>
		<result property="termCode" column="term_code"/>
		<result property="clearDate" column="clear_date"/>
		<result property="remark" column="remark"/>
		<result property="orderStatusName" column="constant_name"/>
	</resultMap>

	<!-- 插入订单数据 -->
	<insert id="insertOrder" parameterType="pd" flushCache="false">
		insert into orders (
			order_code,
			order_time,
			order_status,
			tran_abbr,
			user_code,
			merchant_num,
			merchant_name,
			goods_name,
			goods_value,
			price,
			number,
			amount,
			pay_type,
			pay_type_content,
			pay_bank,
			pay_bank_name,
			card_type,
			card_type_content
		) values (
			#{termSsn},
			DATE_FORMAT(sysdate(),'%Y%m%d%H%i%s'),
			'1',
			#{transName},
			#{userCode},
			#{merchantNum},
			#{merchantName},
			#{goodsName},
			#{goodsValue},
			#{price},
			#{number},
			#{amount},
			#{payType},
			#{payTypeContent},
			#{payBank},
			#{payBankName},
			#{cardType},
			#{cardTypeContent}
		)
	</insert>

	<!-- 更新订单状态 -->
	<update id="updateOrderStatus" parameterType="map" flushCache="false">
		update orders
		set order_status = #{status}
		where 
			order_code = #{termSsn}
			and del_flag = '1'
	</update>
	
	<!-- 更新网关响应信息 -->
	<update id="updateOrderInfo" parameterType="map" flushCache="false">
		update orders
		set acq_ssn = #{termSsn},
			resp_code = #{respCode},
			term_code = #{termCode},
			clear_date = #{clearDate}
		where
			order_code = #{termSsn}
			and del_flag = '1'
	</update>
	
	<!-- 获取订单信息 -->
	<select id="getOrderInfo" parameterType="String" resultMap="orderResultMap">
		select
			order_code,
			order_time,
			user_code,
			merchant_num,
			merchant_name,
			goods_name,
			goods_value,
			price,
			number
		from
			orders
		where
			order_code = #{termSsn}
			and order_status = '2'
			and del_flag = '1'
	</select>
	
	<!-- 获取用户的所有订单 -->
	<select id="getOrderList" parameterType="pd" resultMap="orderResultMap">
		select
			t1.order_code,
			t1.order_time,
			t1.order_status,
			t2.constant_name,
			t1.user_code,
			t1.merchant_num,
			t1.merchant_name,
			t1.goods_name,
			t1.goods_value,
			t1.price,
			t1.number,
			t1.amount,
			t1.pay_type,
			t1.pay_type_content,
			t1.pay_bank,
			t1.pay_bank_name,
			t1.card_type,
			t1.card_type_content,
			t1.remark
		from
			orders t1,
			constant t2
		where
			t1.user_code = #{pd.userCode}
			and t1.del_flag = '1'
			and t2.kind = '11'
			and t1.order_status = t2.constant_value
			<if test="pd.code != null and pd.code != ''">
				and t1.order_code = #{pd.code}
			</if>
		order by t1.order_time desc
	</select>
</mapper>